{"version":3,"sources":["Nav.js","helpers/typeColor.js","Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","style","marginBottom","Navbar","expand","variant","bg","Brand","href","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","Cards","id","name","image","type","Card","width","boxShadow","backgroundColor","typeColor","Img","src","alt","height","Body","Title","Subtitle","Text","App","useState","pokemons","setPokemons","nextPage","setNextPage","prevPage","setPrevPage","getPokemons","pokemonChild","a","result","forEach","pokemon","fetch","res","json","data","curr","next","previous","results","prev","useEffect","display","flexDirection","justifyContent","gap","Button","onClick","flexWrap","textAlign","map","i","sprites","other","dream_world","front_default","types","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b55f760.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar'\nimport React from 'react'\n\nexport default function Nav() {\n    return (\n        <div style={{marginBottom: '40px'}}>\n            <Navbar expand=\"lg\" variant=\"light\" bg=\"primary\">\n                <div>\n                    <Navbar.Brand href=\"#\">POKEMON</Navbar.Brand>\n                </div>\n            </Navbar>\n        </div>\n    )\n}\n","const typeColors = {\n    bug: '#729f3f',\n    dragon: '#53a4cf',\n    fairy: '#fdb9e9',\n    fire: '#fd7d24',\n    ghost: '#7b62a3',\n    ground: '#f7de3f',\n    normal: '#a4acaf',\n    pyschic: '#f366b9',\n    steel: '#9eb7b',\n    dark: '#707070',\n    electric: '#eed535',\n    fighting: '#d56723',\n    flying: '#3dc7ef',\n    grass: '#9bcc50',\n    ice: '#51c4e7',\n    poison: '#b97fc9',\n    rock: '#a38c21',\n    water: '#4592c4'\n}\n\nexport default typeColors;\n","import Card from 'react-bootstrap/Card'\nimport React from 'react'\nimport typeColor from './helpers/typeColor'\n\n\nexport default function Cards({ id, name, image, type }) {\n    return (\n        <div>\n            <Card style={{ width: '18rem', \n            boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)' ,\n            backgroundColor: typeColor[type]}}>\n                <Card.Img variant=\"top\" src={image} alt={name} height='100' />\n                <Card.Body>\n                    <Card.Title>{name}</Card.Title>\n                    <Card.Subtitle>{type}</Card.Subtitle>\n                    <Card.Text>\n                        <h6>{id}</h6>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n","import './App.css';\nimport React, {useEffect, useState } from 'react';\nimport Nav from './Nav'\nimport Cards from './Cards'\nimport Button from 'react-bootstrap/Button'\n\nfunction App() {\n  const [pokemons, setPokemons] = useState([])\n  const [nextPage, setNextPage] = useState('')\n  const [prevPage, setPrevPage] = useState('')\n  const baseURL = 'https://pokeapi.co/api/v2/pokemon?limit=20'\n  \n  const getPokemons = async () => {\n    const res = await fetch(baseURL)\n    const data = await res.json()\n\n    setNextPage(data.next)\n    setPrevPage(data.previous)\n\n    function pokemonChild(result){\n      result.forEach(async (pokemon) => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n        const data = await res.json()\n\n        setPokemons(curr => [...curr, data])\n      });\n    }\n    pokemonChild(data.results)\n  }\n\n  const next = async () => {\n    const res = await fetch(nextPage)\n    const data = await res.json()\n\n    setNextPage(data.next)\n    setPrevPage(data.previous)\n\n    function pokemonChild(result){\n      result.forEach(async (pokemon) => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n        const data = await res.json()\n\n        setPokemons(curr => [...curr, data])\n      });\n    }\n    pokemonChild(data.results)\n  }\n\n  const prev = async () => {\n    if (!prevPage) return;\n    const res = await fetch(prevPage)\n    const data = await res.json()\n\n    setNextPage(data.next)\n    setPrevPage(data.previous)\n\n    function pokemonChild(result){\n      result.forEach(async (pokemon) => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n        const data = await res.json()\n\n        setPokemons(curr => [...curr, data])\n      });\n    }\n    pokemonChild(data.results)\n  }\n\n  useEffect( () => {\n    getPokemons()\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', gap: '20px', marginBottom:'20px'}}>\n        <Button variant=\"secondary\" onClick={prev}>Back</Button>\n        <Button variant=\"secondary\" onClick={next}>Next</Button>\n      </div>\n      <div style={{display: 'flex', flexDirection: 'row',flexWrap: 'wrap', justifyContent: 'center', gap: '20px', textAlign: 'center', backgroundColor: 'beige' }}>\n        {pokemons.map((pokemon, i) => \n          <Cards\n          name={pokemon.name}\n          image={pokemon.sprites.other.dream_world.front_default}\n          type={pokemon.types[0].type.name}\n          id={pokemon.id}\n          key={i}\n          />\n        )}\n      </div>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', gap: '20px', marginTop:'20px'}}>\n        <Button variant=\"secondary\" onClick={prev}>Back</Button>\n        <Button variant=\"secondary\" onClick={next}>Next</Button>\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}